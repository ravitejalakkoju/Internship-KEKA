{"version":3,"sources":["./src/environments/environment.ts","./src/app/employees/employees-list/employees-list.component.html","./src/app/employees/employees-list/employees-list.component.ts","./src/app/employees/employee-routing.module.ts","./src/app/employees/employee-form/employee-form.component.ts","./src/app/employees/employee-form/employee-form.component.html","./src/app/employees/employee-details/employee-details.component.html","./src/app/employees/employee-details/employee-details.component.ts","./src/app/employees/employees.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/employees/employees.component.ts","./src/app/employees/employees.component.html","./src/app/employee.ts","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/route.service.ts","./src/app/employee.service.ts","./src/app/employees/employee-form-validator.service.ts","./src/app/mock-employees.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<span class=\"text-contact roboto fw-bold small\">CONTACTS</span>\n<div class=\"overflow-y ms-lg-3 mt-lg-3\">\n    <div *ngIf=\"employees.length > 0; else elseBlock\" class=\"nav flex-column nav-pills\">\n        <button *ngFor=\"let employee of employees\" \n        class=\"nav-link text-left rounded-0 p-2 pt-1 border border-secondary w-100\" \n        [routerLink]=\"['employees',employee.id]\"\n        [class.active]=\"employee.id === getId()\">\n            <div>\n                <span class=\"fs-5\">{{employee.name}}</span>\n                <div class=\"lh-1 m-1 small\">\n                    <span class=\"small\">{{employee.email}}</span><br>\n                    <span class=\"small\">+91 {{employee.mobile}}</span>\n                </div>\n            </div>\n        </button>\n    </div>\n    <ng-template #elseBlock>\n        <div class=\"text-secondary bg-light p-4\">\n            EMPTY\n        </div>\n    </ng-template>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../../employee'; \n\nimport { EmployeeService } from '../../employee.service';\nimport { RouteService } from '../../route.service';\n\n@Component({\n  selector: 'employees-list',\n  templateUrl: './employees-list.component.html',\n  styleUrls: ['./employees-list.component.scss']\n})\nexport class EmployeesListComponent implements OnInit {\n  employees: Employee[];\n  \n  ngOnInit(): void {\n    this.getEmployees();\n  }\n  constructor(private employeeService: EmployeeService, private routeService: RouteService) {\n  }\n\n  getId(): number{\n    let selectedId: number = 0;\n    this.routeService.getEmployeeId().subscribe(id => selectedId = id);\n    return selectedId;\n  }\n\n  getEmployees(){\n    this.employeeService.getEmployees()\n    .subscribe(employees => this.employees = employees);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\n\nconst employeeRoutes: Routes = [\n    {path: 'add', component: EmployeeFormComponent},\n    {path: ':id', component: EmployeeDetailsComponent},\n    {path: ':id/edit', component: EmployeeFormComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(employeeRoutes)],\n  exports: [RouterModule]\n})\n\nexport class EmployeeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\n\nimport { RouteService } from '../../route.service';\nimport { EmployeeService } from '../../employee.service';\nimport { EmployeeFormValidatorService } from '../employee-form-validator.service';\n\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'app-employee-form',\n  templateUrl: './employee-form.component.html',\n  styleUrls: ['./employee-form.component.scss']\n})\n\nexport class EmployeeFormComponent implements OnInit {\n  action: string;\n  add: boolean;\n  employee: Employee = new Employee();\n\n  employeeForm = this.fb.group({\n    'name': ['', Validators.required],\n    'email': ['', [Validators.required, this.formValidator.patternValidator(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}/), this.formValidator.duplicateValidator('email')]],\n    'mobile': ['', [Validators.required,  this.formValidator.patternValidator(/^\\d{10}/), this.formValidator.duplicateValidator('mobile') ]] ,\n    'landline': [''],\n    'website': ['', this.formValidator.patternValidator(/www\\.[a-z0-9.-]+\\.[a-z]{2,}$/)],\n    'address': ['', [Validators.required]]\n  })\n\n\n  constructor(\n    private routeService: RouteService, \n    private activatedRoute: ActivatedRoute, \n    private employeeService: EmployeeService,\n    private formValidator: EmployeeFormValidatorService,\n    private route: Router,\n    private location: Location,\n    private fb: FormBuilder\n  ){\n    this.routeService.updateEmployeeId(0);\n  }\n\n\n  ngOnInit(): void {\n    const url = this.activatedRoute.snapshot.url;\n    this.action = url[url.length-1].path;\n    if(this.action == 'edit') {\n      this.activatedRoute.paramMap.subscribe(params => this.getEmployee());\n      this.add = false;\n    }\n    else {\n      this.routeService.updateEmployeeId(0);\n      this.add = true;\n    }\n    this.routeService.updateFormAction(this.add);\n    this.employeeForm.patchValue(this.employee);\n  }\n\n  get name(){\n    return this.employeeForm.get('name');\n  }\n\n  get email(){\n    return this.employeeForm.get('email');\n  }\n\n  get mobile(){\n    return this.employeeForm.get('mobile');\n  }\n\n  get website(){\n    return this.employeeForm.get('website');\n  }\n\n  get address(){\n    return this.employeeForm.get('address');\n  }\n\n  getEmployee(): void{\n    const id = +this.activatedRoute.snapshot.paramMap.get('id');\n    this.routeService.updateEmployeeId(id);\n    this.employeeService.getEmployee()\n      .subscribe(employee => this.employee = {...employee});\n    if(Object.keys(this.employee).length === 0) this.route.navigate(['/']);\n  }\n\n  onSubmit(){\n    this.add ? this.addEmployee() : this.saveEmployee();\n  }\n\n  addEmployee(): void{\n    let id: number;\n    this.employeeService.addEmployee(this.employeeForm.value as Employee).subscribe(returnId => id = returnId);\n    this.route.navigate([`employees/${id}`]);\n  }\n\n  saveEmployee(): void{\n    let id: number = +this.activatedRoute.snapshot.paramMap.get('id');\n    this.employeeService.updateEmployee(this.employeeForm.value);\n    this.route.navigate([`employees/${id}`]);\n  }\n  \n  goBack(){\n    this.location.back();\n  }\n\n}\n","<div id=\"employee-form-div\" class=\"mb-5 p-4 bg-white col-11 col-lg-7\">\n    <a (click)=\"goBack()\"><i class=\"fa fa-close position-absolute\" style=\"right: 1rem; top: 1rem;\"></i></a>\n        <form class=\"row g-3 needs-validation\" [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n            <div class=\"col-12 col-lg-11 col-xl-10\">\n                <div class=\"col-md-12\">\n                    <label for=\"employeeName\" class=\"form-label m-0 small fw-bold\">Name</label>\n                    <input type=\"text\" formControlName=\"name\" \n                    [class.is-invalid]=\"name.invalid && name.touched\" class=\"form-control rounded-0 border-dark\" required>\n                    <small class=\"text-danger\" [class.d-none]=\"name.valid || name.untouched\">Name is required *</small>\n                </div>\n                <div class=\"col-md-12\">\n                    <label for=\"email\" class=\"form-label m-0 small fw-bold\">Email</label>\n                    <div class=\"input-group has-validation\">\n                        <span class=\"input-group-text border-dark rounded-0 border-right-0\" id=\"inputGroupPrepend\">@</span>\n                        <input type=\"email\" [class.is-invalid]=\"email.invalid && email.touched\" formControlName=\"email\" class=\"form-control rounded-0 border-dark\" \n                        aria-describedby=\"inputGroupPrepend\" required>\n                        <div *ngIf=\"email.invalid && email.touched\" class=\"col-12\">\n                            <small *ngIf=\"email.errors?.required\" class=\"text-danger\">Email is required * </small>\n                            <small *ngIf=\"email.errors?.pattern\" class=\"text-danger\">Enter in correct pattern [eg., xyz.123_abc@hyd.co.in] ! </small>\n                            <small *ngIf=\"email.errors?.duplicate\" class=\"text-danger col-12\">E-Mail already exists.</small>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <label for=\"mobileNum\" class=\"form-label m-0 small fw-bold\">Mobile</label>\n                        <input type=\"number\" formControlName=\"mobile\" [class.is-invalid]=\"name.invalid && name.touched\" class=\"form-control rounded-0 border-dark\" required>\n                        <div *ngIf=\"mobile.invalid && mobile.touched\">\n                            <small *ngIf=\"mobile.errors?.required\" class=\"text-danger\">Mobile No. is required *</small>\n                            <small *ngIf=\"mobile.errors?.pattern\" class=\"text-danger\">Phone Number should be of 10 Digits.</small>\n                            <small *ngIf=\"mobile.errors?.duplicate\" class=\"text-danger\">Mobile Number already exists.</small>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <label for=\"landline\" class=\"form-label m-0 small fw-bold\">Landline</label>\n                        <input type=\"number\" formControlName=\"landline\" class=\"form-control rounded-0 border-dark\">\n                    </div>\n                </div>\n                <div class=\"col-md-12\">\n                    <label for=\"website\" class=\"form-label m-0 small fw-bold\">Website</label>\n                    <input type=\"url\" formControlName=\"website\" class=\"form-control rounded-0 border-dark\" \n                        placeholder=\"eg., www.google.com  \">\n                    <div *ngIf=\"website.invalid && website.touched\">\n                        <small *ngIf=\"website.errors?.pattern\" class=\"text-danger\">Wrong Pattern !</small>\n                    </div>\n                </div>\n                <div class=\"col-md-12\">\n                    <label for=\"address\" class=\"form-label m-0 small fw-bold\">Address</label>\n                    <textarea type=\"textarea\" formControlName=\"address\" \n                        [class.is-invalid]=\"name.invalid && name.touched\" class=\"form-control rounded-0 border-dark\" required>\n                    </textarea>\n                    <small [class.d-none]=\"address.valid || address.untouched\" class=\"text-danger\">Address is required *</small>\n                </div>\n            </div>\n          <div class=\"col-12 d-flex justify-content-end\">\n            <a class=\"btn me-2 btn-success rounded-0 p-1 ps-5 pe-5\" (click)=\"goBack()\">Close</a>\n            <div *ngIf=\"add; then thenblock else elseblock\"></div>\n            <ng-template #thenblock>\n                <button class=\"btn btn-success rounded-0 p-1 ps-5 pe-5\" \n                    [disabled]=\"!employeeForm.valid\" type=\"submit\">Add</button>\n            </ng-template>\n            <ng-template #elseblock>\n                <button class=\"btn btn-success rounded-0 p-1 ps-5 pe-5\" \n                    [disabled]=\"!employeeForm.valid\" type=\"submit\">Save</button>\n            </ng-template>\n          </div>\n\n        </form>\n</div>","<div *ngIf=\"employee; else elseBlock\" class=\"tabContent pt-5 pt-lg-0 position-relative\">\n    <div class=\"tab-pane fade show ms-lg-5 position-relative\" id=\"v-pills-tab\" role=\"tabpanel\" aria-labelledby=\"v-pills-id-tab\">\n        <div class=\"options small position-absolute top-0 end-0\">\n            <button class=\"edit border-0 bg-transparent text-secondary edit-employee\" [routerLink]=\"['edit']\"><i class=\"fas fa-pen me-1\"></i>EDIT</button>\n            <button class=\"delete ms-md-2 border-0 bg-transparent text-secondary delete-employee\" (click)=\"deleteEmployee()\"><i class=\"fas fa-trash-alt me-1\"></i>DELETE</button>\n        </div>\n        <div id=\"v-pills-${employee.id}-details\">\n            <span class=\"fs-4\">\n                {{employee.name}}\n            </span>\n            <ul class=\"list-unstyled small text-dark\">\n                <li class=\"mt-2 mb-2\">Email: {{employee.email}}</li>\n                <li class=\"mt-2 mb-2\">\n                    Mobile: +91 {{employee.mobile}} <br>    \n                    Landline: {{employee.landline}}\n                </li>\n                <li class=\"mt-2 mb-2\">Website: {{employee.website}}</li>\n                <li class=\"mt-2 mb-2\">\n                Address: <span class=\"roboto\" style=\"font-size: 0.85rem; white-space: pre-wrap;\">{{employee.address}}</span>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<ng-template #elseBlock>\n    <div class=\"bg-light text-center text-secondary p-5\">No such contact exist [ wrong route ]</div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { EmployeeService } from '../../employee.service';\nimport { RouteService } from '../../route.service';\n\nimport { Employee } from '../../employee';\n\n@Component({\n  selector: 'employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.scss']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  employee?: Employee;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private employeeService: EmployeeService,\n    private routeService: RouteService,\n    private router: Router\n  ) {\n    this.activatedRoute.paramMap.subscribe(params => this.ngOnInit());\n  }\n\n  ngOnInit(): void {\n    this.getEmployee();\n  }\n\n  ngOnDestroy(){\n    this.routeService.updateEmployeeId(0);\n  }\n\n  getEmployee(): void{\n    const id = +this.activatedRoute.snapshot.paramMap.get('id');\n    this.routeService.updateEmployeeId(id);\n    this.employeeService.getEmployee()\n    .subscribe(employee => this.employee = employee);\n  }\n\n  deleteEmployee(): void{\n    if(window.confirm('Are you sure that you want to delete this address ?')){\n      this.employeeService.deleteEmployee(this.employee);\n      this.router.navigate(['/']);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { EmployeesComponent } from './employees.component';\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\n\n\n\n@NgModule({\n  declarations: [\n    EmployeesComponent,\n    EmployeesListComponent,\n    EmployeeDetailsComponent,\n    EmployeeFormComponent\n  ],\n  imports: [\n    CommonModule,\n    EmployeeRoutingModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    EmployeesComponent\n  ]\n})\nexport class EmployeesModule { }\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'addressbook';\n  constructor(private location: Location) {}\n  ngOnInit(){\n    window.addEventListener('keydown', e => {\n      if(e.keyCode === 27) this.location.back();\n    })\n  }\n}\n","<header-nav></header-nav>\n<employees></employees>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'employees',\n  templateUrl: './employees.component.html',\n  styleUrls: ['./employees.component.scss']\n})\nexport class EmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row m-0\">\n  <employees-list class=\"col-12 col-lg-4 mt-3\"></employees-list>\n  <div class=\"col-12 col-lg-8 mt-2 mt-lg-4\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","export class Employee{\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    mobile: string;\r\n    landline: string;\r\n    website: string;\r\n    address: string;\r\n    constructor(id: number = null,\r\n            name:string = '',\r\n            email: string = '',\r\n            mobile: string = '',\r\n            landline: string = '',\r\n            website: string = '',\r\n            address: string = '')\r\n    {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.email = email;\r\n        this.mobile = mobile;\r\n        this.landline = landline;\r\n        this.website = website;\r\n        this.address = address;\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EmployeesModule } from './employees/employees.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    EmployeesModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'header-nav',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  constructor() { }\n  ngOnInit() {}\n  getAction(): boolean{\n    let length  = window.location.hash.split('/').length;\n    let action = (window.location.hash.split('/')[length-1] == 'add')\n    return action;\n  }\n}\n","<header class=\"bg-header p-2 p-md-3 navbar navbar-expand-lg\">\n    <span class=\"century-gothic fs-1 text-white\">Address Book</span>\n</header>\n<nav class=\"navigation navbar navbar-expand bg-dark p-0 m-0\">\n    <div class=\"container-fluid fs-6 p-0\">\n        <div class=\"collapse navbar-collapse small p-0\" id=\"navbarNavAltMarkup\">\n              <div class=\"navbar-nav roboto me-auto p-0 m-0\">\n              <a class=\"link text-start\" [class.active]=\"!getAction()\" routerLink=\"employees\" id=\"home\">HOME</a>\n              <button class=\"link text-start\" routerLinkActive=\"active\" routerLink=\"employees/add\">+ADD</button>\n        </div>\n        <span class=\"navbar-text\">\n            <img src=\"../assets/blog-icon.png\" class=\"me-2 ms-3\">\n        </span>\n      </div>\n    </div>\n</nav>","import { Injectable } from '@angular/core';\n\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteService {\n  id?: Observable<number> = of(0);\n  add?: Observable<boolean>;\n  constructor() {\n  }\n\n  updateEmployeeId(id: number): void{\n    this.id = of(id);\n  }\n\n  updateFormAction(add: boolean){\n    this.add = of(add);\n  }\n\n  getFormAction(): Observable<boolean>{\n    return this.add;\n  }\n\n  getEmployeeId(): Observable<number>{\n    return this.id;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Employee } from './employee';\nimport { EMPLOYEES } from './mock-employees';\nimport { Observable, of} from 'rxjs';\nimport { ActivatedRoute } from '@angular/router'\n\nimport { RouteService } from './route.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  selectedId?: number = 0;\n  constructor(private activatedRoute: ActivatedRoute, private routeService: RouteService){}\n  sortEmployees(){\n    EMPLOYEES.sort((a,b) => a.name.localeCompare(b.name));\n  }\n  getEmployees(): Observable<Employee[]>{\n    this.sortEmployees();\n    const employees = of(EMPLOYEES);\n    return employees;\n  }\n  getEmployee(): Observable<Employee>{\n    this.routeService.getEmployeeId().subscribe((id: number) => this.selectedId = id);\n    const employee = EMPLOYEES.find(e => e.id === this.selectedId) as Employee;\n    return of(employee);\n  }\n  addEmployee(employee: Employee): Observable<number>{\n    employee.id = (EMPLOYEES.length > 0) ? Math.max.apply(Math, EMPLOYEES.map(e => e.id)) + 1 : 1;\n    EMPLOYEES.push(employee);\n    this.sortEmployees();\n    return of(employee.id);\n  }\n  updateEmployee(employee: Employee){\n    let employeeFound = EMPLOYEES.find(e => this.selectedId == e.id);\n    Object.keys(employee).forEach(el =>{\n      employeeFound[el] = employee[el]\n    })\n  }\n  deleteEmployee(employee: Employee){\n    const index = EMPLOYEES.indexOf(employee);\n    if(index != -1){\n      EMPLOYEES.splice(index, 1);\n    }\n  }\n  checkDuplicate(name: string, value: string): boolean{\n    let duplicateExist: boolean = false;\n    EMPLOYEES.forEach(employee => {\n      if(value == employee[name] && this.selectedId !== employee.id) duplicateExist = true;\n    });\n    return duplicateExist;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\nimport { EmployeeService } from '../employee.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeFormValidatorService {\n\n  constructor(private employeeService: EmployeeService) { }\n  patternValidator(pattern: RegExp): ValidatorFn {\n    return (control: AbstractControl):{[key: string]: any} | null => {\n        const patternMatch = !(pattern.test(control.value) || control.value.length == 0);\n        return patternMatch ? { 'pattern': {Value: control.value}} : null;\n    } \n  }\n duplicateValidator(type: string): ValidatorFn {\n    return (control: AbstractControl):{[key: string]: any} | null => {\n        const duplicateExists = this.employeeService.checkDuplicate(type, control.value);\n        return duplicateExists ? { 'duplicate': {Value: control.value}} : null;\n    } \n  }\n}\n","import { Employee } from './employee';\r\n\r\nexport let EMPLOYEES: Employee[] = [\r\n    { id: 1, name: 'Ravi Teja Lakkoju', email: 'ravi@technovert.com', mobile: '9292929232', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 2, name: 'Bharat Chillimunta', email: 'bharat@technovert.com', mobile: '9292929233', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 3, name: 'Pavan Kasukurthi', email: 'pavan@technovert.com', mobile: '9292929234', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 4, name: 'Pranay Suryapet', email: 'pranay@technovert.com', mobile: '9292929235', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 5, name: 'Varun Chittimella', email: 'varun@technovert.com', mobile: '9292929236', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 6, name: 'Chandana Jinka', email: 'chandana@technovert.com', mobile: '9292929246', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 7, name: 'Nikhil Reddy', email: 'nikhil@technovert.com', mobile: '9292929238', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 8, name: 'Ankita Patel', email: 'ankita@technovert.com', mobile: '9292929239', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'},\r\n    { id: 9, name: 'Sheetal Patnaik', email: 'sheetal@technovert.com', mobile: '9292929245', landline: '040301231215', website: 'www.technovert.com', address: '123 now here, Some street, Madhapur, Hyderabad 500033'}\r\n];\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'employees', pathMatch: 'full'},\n  {path: 'employees', loadChildren: () => import('./employees/employees.module').then(m => m.EmployeesModule)}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}